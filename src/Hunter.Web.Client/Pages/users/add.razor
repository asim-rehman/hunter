@page "/users/add/"
@using Hunter.Web.Client.Models
@using Hunter.Web.Client.Models.Entities;
@using Hunter.Web.Client.Services
@using Hunter.Web.Client.Components
@using System.Collections.ObjectModel
@inject UsersService UsersService
@inject IUriHelper UriHelper


@inherits BasePage


<Header Title="Register" ShowLoader="@ShowLoader" />
<AjaxResponse Content="@responseModel.Content" Status="@responseModel.Status" />

<EditForm Model="@responseModel" OnValidSubmit="@Save">

    <div class="form-group">
        <div class="col-md-8">
            <div role="alert" class="alert alert-info">
                <span class="fa fa-info-circle"></span>
                <strong>Have an account? <a href="/users/login">Login Now</a></strong>
            </div>
        </div>
    </div>

    <DataAnnotationsValidator />
    <ValidationSummary />



    <div class="form-group">
        <div class="col-sm-2">
            <label>Username (Email)</label>
        </div>
        <div class="col-sm-3">
            <InputText @bind-value="@User.Username" Class="form-control" />
            <ValidationMessage For="@(() => User.Username)" />
        </div>

    </div>

    <div class="form-group">
        <div class="col-sm-2">
            <label>First Name</label>
        </div>
        <div class="col-sm-3">
            <InputText @bind-value="@User.FirstName" Class="form-control" />
            <ValidationMessage For="@(() => User.FirstName)" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-2">
            <label>Last Name</label>
        </div>
        <div class="col-sm-3">
            <InputText @bind-value="@User.LastName" Class="form-control" />
            <ValidationMessage For="@(() => User.LastName)" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-2">
            <label>Password</label>
        </div>
        <div class="col-sm-3">
            <InputText AdditionalAttributes="@readOnly" @bind-value="@User.Password" Class="form-control" />
            <ValidationMessage For="@(() => User.Password)" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-2">
            <label>Confirm Password</label>
        </div>
        <div class="col-sm-3">
            <InputText AdditionalAttributes="@readOnly" @bind-value="@User.ConfirmPassword" Class="form-control" />
            <ValidationMessage For="@(() => User.ConfirmPassword)" />
        </div>
    </div>

    <div class="actionbar">
        <a class="btn btn-secondary" href="/users">
            <span class="fa fa-arrow-left"></span>
            Back
        </a>
        <button class="btn btn-primary" type="submit">
            <span class="fa fa-save"></span>
            Save
        </button>
    </div>
</EditForm>

@functions
{
    User User = new User();
    ResponseModel<User> responseModel = new ResponseModel<User>();

    IDictionary<string, object> keyValuePairs = new Dictionary<string, object>();
    IReadOnlyDictionary<string, object> readOnly = null;


    protected override async Task OnInitAsync()
    {
        await base.OnInitAsync();
        responseModel.Entity = User;
        keyValuePairs.Add("type", "password");
        readOnly = new ReadOnlyDictionary<string, object>(keyValuePairs);
    }

    private async Task Save()
    {
        ShowLoader = true;
        responseModel = await UsersService.Create(responseModel.Entity);
        responseModel.Entity = User;
        if (responseModel.Status == Enums.ResponseType.success.GetName())
        {
            UriHelper.NavigateTo("/users");
        }
        ShowLoader = false;
    }

}